# Generated by Django 2.0 on 2018-10-27 13:18

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('u_number', models.IntegerField(default=10011, max_length=20, verbose_name='学号')),
                ('names', models.CharField(default='', max_length=8, verbose_name='姓名')),
                ('classes', models.CharField(default='', max_length=20, verbose_name='班级')),
                ('seat_status', models.CharField(choices=[('0', '不可选'), ('1', '可以选')], default='1', max_length=6, verbose_name='座位状态')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=7, verbose_name='性别')),
                ('mobile', models.CharField(blank=True, max_length=12, null=True, verbose_name='电话')),
                ('pdf_url', models.CharField(blank=True, max_length=50, null=True, verbose_name='文档地址')),
                ('college', models.CharField(default='电信学院', max_length=10, verbose_name='学院')),
                ('campus', models.CharField(default='官渡校区', max_length=10, verbose_name='校区')),
                ('feature', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='特征码')),
                ('grades', models.IntegerField(blank=True, null=True, verbose_name='成绩')),
                ('image', models.ImageField(default='image/default.png', upload_to='image/%Y/%m', verbose_name='头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '学生信息',
                'verbose_name': '学生信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('image', models.ImageField(upload_to='banner/%Y/%m', verbose_name='轮播图')),
                ('url', models.URLField(verbose_name='访问地址')),
                ('index', models.IntegerField(default=100, verbose_name='顺序')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name_plural': '轮播图',
                'verbose_name': '轮播图',
            },
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='验证码')),
                ('email', models.EmailField(max_length=50, verbose_name='邮箱')),
                ('send_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='发送时间')),
            ],
            options={
                'verbose_name_plural': '邮箱验证码',
                'verbose_name': '邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('1', '可以选'), ('0', '不可选'), ('2', '维修')], default=1, max_length=10, verbose_name='座位状态')),
                ('starttime', models.DateField(auto_now_add=True, null=True, verbose_name='开始时间')),
                ('endtime', models.DateField(auto_now=True, null=True, verbose_name='结束时间')),
                ('number', models.IntegerField(verbose_name='座位号')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name_plural': '座位状态',
                'verbose_name': '座位状态',
                'ordering': ['-number'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': '自定义页面',
                'verbose_name': '自定义页面',
            },
        ),
        migrations.CreateModel(
            name='User_ex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(default='', max_length=24, verbose_name='邮箱')),
                ('valid_code', models.CharField(max_length=24)),
                ('valid_time', models.DateTimeField(auto_now=True)),
                ('starttime', models.DateField(auto_now_add=True, null=True, verbose_name='开始时间')),
                ('endtime', models.DateField(auto_now=True, null=True, verbose_name='结束时间')),
            ],
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateTime', models.CharField(choices=[('1', '星期一'), ('2', '星期二'), ('3', '星期三'), ('4', '星期四'), ('5', '星期五'), ('6', '星期六'), ('7', '星期天')], default=0, max_length=10, verbose_name='星期')),
            ],
            options={
                'verbose_name_plural': '星期',
                'verbose_name': '星期',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='WTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classtime', models.CharField(choices=[('12', '1-2节课'), ('34', '3-4节课'), ('56', '5-6节课'), ('78', '7-8节课'), ('90', '9-10节课')], default=0, max_length=10, verbose_name='节课')),
                ('week', models.ManyToManyField(to='users.Week', verbose_name='星期')),
            ],
            options={
                'verbose_name_plural': '节课',
                'verbose_name': '节课',
            },
        ),
        migrations.AddField(
            model_name='seat',
            name='week',
            field=models.ManyToManyField(to='users.WTime', verbose_name='节课'),
        ),
    ]
